{"ast":null,"code":"var _jsxFileName = \"C:\\\\AvionSchool2\\\\batch9-activities\\\\batch9-activities\\\\calingacion-chester-garett\\\\js-challenges-and-projects-v.1.2\\\\react_training4\\\\src\\\\components\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {}\n});\nuseEffect(() => {\n  const storedUserLoggedInformation = localStorage.getItem('isLoggedIn');\n\n  if (storedUserLoggedInformation === '1') {\n    setIsLoggedIn(true);\n  }\n}, []);\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n    localStorage.removeItem('isLoggedIn');\n  };\n\n  const loginHandler = () => {\n    setIsLoggedIn(true);\n    localStorage.setItem('isLoggedIn', '1');\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContextProvider.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler,\n      onLogin: loginHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AuthContextProvider, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/AvionSchool2/batch9-activities/batch9-activities/calingacion-chester-garett/js-challenges-and-projects-v.1.2/react_training4/src/components/store/auth-context.js"],"names":["React","useState","AuthContext","createContext","isLoggedIn","onLogout","onLogin","email","password","useEffect","storedUserLoggedInformation","localStorage","getItem","setIsLoggedIn","AuthContextProvider","props","logoutHandler","removeItem","loginHandler","setItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAGA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACpCC,EAAAA,UAAU,EAAE,KADwB;AAEpCC,EAAAA,QAAQ,EAAE,MAAM,CAAE,CAFkB;AAGpCC,EAAAA,OAAO,EAAE,CAACC,KAAD,EAAOC,QAAP,KAAoB,CAAE;AAHK,CAApB,CAApB;AAMAC,SAAS,CAAC,MAAM;AACZ,QAAMC,2BAA2B,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAApC;;AAEA,MAAIF,2BAA2B,KAAK,GAApC,EAAwC;AACtCG,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,CANM,EAMJ,EANI,CAAT;AAQA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAM,CAACX,UAAD,EAAaS,aAAb,IAA8BZ,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMe,aAAa,GAAG,MAAM;AACxBH,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAF,IAAAA,YAAY,CAACM,UAAb,CAAwB,YAAxB;AACH,GAHD;;AAKA,QAAMC,YAAY,GAAG,MAAM;AACvBL,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAF,IAAAA,YAAY,CAACQ,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AACH,GAHD;;AAIA,sBAAO,QAAC,mBAAD,CAAqB,QAArB;AACH,IAAA,KAAK,EAAE;AACHf,MAAAA,UAAU,EAAEA,UADT;AAEHC,MAAAA,QAAQ,EAAEW,aAFP;AAGHV,MAAAA,OAAO,EAAEY;AAHN,KADJ;AAAA,cAMLH,KAAK,CAACK;AAND;AAAA;AAAA;AAAA;AAAA,UAAP;AAOH,CAnBM;;GAAMN,mB;;KAAAA,mB;AAqBb,eAAeZ,WAAf","sourcesContent":["import React, {useState} from 'react';\r\n\r\n\r\nconst AuthContext = React.createContext({\r\n    isLoggedIn: false,\r\n    onLogout: () => {},\r\n    onLogin: (email,password) => {}\r\n});\r\n\r\nuseEffect(() => {\r\n    const storedUserLoggedInformation = localStorage.getItem('isLoggedIn');\r\n\r\n    if (storedUserLoggedInformation === '1'){\r\n      setIsLoggedIn(true);\r\n    }\r\n  }, []);\r\n\r\nexport const AuthContextProvider = (props) => {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    const logoutHandler = () => {\r\n        setIsLoggedIn(false);\r\n        localStorage.removeItem('isLoggedIn')\r\n    }\r\n\r\n    const loginHandler = () => {\r\n        setIsLoggedIn(true);\r\n        localStorage.setItem('isLoggedIn', '1');\r\n    }\r\n    return <AuthContextProvider.Provider\r\n        value={{\r\n            isLoggedIn: isLoggedIn,\r\n            onLogout: logoutHandler,\r\n            onLogin: loginHandler,\r\n        }}\r\n    >{props.children}</AuthContextProvider.Provider>\r\n}\r\n\r\nexport default AuthContext;\r\n"]},"metadata":{},"sourceType":"module"}